variable "do_token" {}
variable "region" { }
variable "environment" { }
variable "private_key" {}
variable "public_key" {}
variable "ssh_fingerprint" { }
variable "domain" { }
variable "datacenter" { }
variable "sub_domains" {
    default = ""
    description = "Any additional sub-domains to be added before the domain variable"
}

provider "digitalocean" {
  token = "${chomp(file("~/.secrets/digital-ocean/token"))}"
}

module "do-keypair" {
  keyname = "${var.environment}"
  source = "./keypair"
  public_key_filename = "${var.public_key}"
}

resource "digitalocean_domain" "default" {
  name = "${var.domain}"
  ip_address = "0.0.0.0"
}

{% for d in do_droplets %}
{% if d.name in groups.do %}
resource "digitalocean_droplet" "{{ d.name }}" {
    image = "{{ d.image_id|default('debian-8-x64') }}"
    #name = "{{ d.name }}-${var.role}-${format(var.count_format, count.index+1)}"
    name = "{{ d.name }}.${var.domain}"
    region = "${var.region}"
    size = "{{ d.size|default("512mb") }}"
    private_networking = true
    ssh_keys = [
      "${var.ssh_fingerprint}"
    ]
    #user_data = "{\"role\":\"${var.role}\",\"dc\":\"${var.datacenter}\"}"
    user_data = "${chomp(file("{{ user_data|default("user-data") }}"))}"

  connection {
      user = "root"
      type = "ssh"
      private_key = "${file(var.private_key)}"
      host = "${self.ipv4_address}"
      timeout = "2m"
  }

  provisioner "remote-exec" {
    inline = [
      "export PATH=$PATH:/usr/bin",
      "if which apt-get 2>&1 >/dev/null; then sudo apt-get update && sudo apt-get upgrade -y; fi",
      "if which yum 2>&1 >/dev/null; then sudo yum update -y && sudo yum install python epel-release -y; fi",
    ]
  }

  provisioner "file" {
    source      = "../../files/common-scripts/keys.host.fingerprints.sh"
    destination = "/tmp/keys.hosts.fingerprints.sh"
  }

  provisioner "remote-exec" {
    inline = [
      "chmod +x /tmp/keys.hosts.fingerprints.sh",
      "/tmp/keys.hosts.fingerprints.sh",
    ]
  }
}

resource "digitalocean_record" "{{ d.name }}" {
  domain = "${digitalocean_domain.default.name}"
  type = "A"
  name = "{{ d.name }}"
  ttl = "{{ dns_a_ttl }}"
  value = "${digitalocean_droplet.{{ d.name }}.ipv4_address}"
}

{% if opendkim_host_spf_txt is defined and opendkim_host_spf_txt != '' %}
resource "digitalocean_record" "TXT-{{ d.name }}" {
  domain = "${digitalocean_domain.default.name}"
  type = "TXT"
  ttl = "{{ dns_txt_ttl }}"
  name = "{{ d.name }}"
  value = "{{ opendkim_host_spf_txt }}"
}
{% endif %}

{% if dns_cname[d.name] is defined %}
{% for _cn in dns_cname[d.name] %}
resource "digitalocean_record" "CNAME-{{ _cn }}" {
  domain = "${digitalocean_domain.default.name}"
  type = "CNAME"
  name = "{{ _cn }}"
  ttl = "{{ dns_cname_ttl }}"
  value = "{{ d.name }}.${var.sub_domains}"
}
{% endfor %}
{% endif %}

output "{{ d.name }}" {
  value = { "{{ d.name }}.${var.domain}" = "${join(",", digitalocean_droplet.{{ d.name }}.*.ipv4_address)}" }
}

{% endif %}
{% endfor %}

{% if dns_txt is defined and dns_txt.0 is defined %}
{% for _txt in dns_txt %}
resource "digitalocean_record" "TXT-{{ (_txt.name != '@')|ternary(_txt.name|replace('.','_'), 'record')}}" {
  domain = "${digitalocean_domain.default.name}"
  type = "TXT"
  ttl = "{{ dns_txt_ttl }}"
{% if _txt.name is defined and _txt.name != '' %}
  name = "{{ _txt.name }}"
{% endif %}
{% if _txt.value is defined and _txt.value != '' %}
  value = "{{ _txt.value }}"
{% endif %}
}
{% endfor %}
{% endif %}

{% if dns_mx is defined and dns_mx.0 is defined %}
{% for _mx in dns_mx %}
resource "digitalocean_record" "MX-{{ (_mx.name != '@')|ternary(_mx.name|replace('.','_'), 'record')}}" {
  domain = "${digitalocean_domain.default.name}"
  type = "MX"
  ttl = "{{ dns_mx_ttl }}"
  priority = "{{ _mx.priority|default(10) }}"
{% if _mx.name is defined and _mx.name != '' %}
  name = "{{ _mx.name }}"
{% endif %}
{% if _mx.value is defined and _mx.value != '' %}
  value = "{{ _mx.value }}."
{% endif %}
}
{% endfor %}
{% endif %}
