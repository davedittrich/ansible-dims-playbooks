---

# Example playbook from geerlingguy/ansible-role-jenkins
# - hosts: ci_server
#   vars:
#     jenkins_hostname: jenkins
#   roles:
#     - ansible-role-jenkins

ci_server:
  vars:
    devops_email_list: 'dave.dittrich@gmail.com'
    git_reposdir: '/opt/git'
    git_authorized_keys:
      - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDGSvmiyX+S5GcV2aK9/6QXSnk9pHJrMC5+mBTJ6/IvgmZjX8dp3NrA9ibsnQvpYOkIIEAW8KMm9yQ+BA1qMCSLkY6ETZs92tL7umv+F6DZOqrGW4tXkEAb+U9Gf+FgFnUnhxJQVA0Jp/3p5fJ9VGbx09I2MG1nil+999cZtv4m61VFpt9qrtV3Psz/zDwrZfPRUhQ+5wLzMJEhqRmXyYAOQ1D7bXUs2FXXuhbM4ESR/gpfz4N0mUqFY9zxIE1zSzVznGizRdbQVks7wF6uJ2eywii/FRIbToWFJP+DBctnekEiK7u+Vm8Yzqq7q5pJ+nmpCi7SFSIQBgv4ZrwFmTsh DIMS key for dittrich'
    git_mailing_list: '{{ devops_email_list }}'
    git_announce_list: '{{ devops_email_list }}'
    git_envelopesender: 'dims@{{ dims_fqdn }}'
    git_emailprefix: '[Git]'
    git_required_repos:
      - name: 'prisem'
        description: 'PRISEM RPC Utilities'
        upstream: 'https://github.com/davedittrich/prisem-rpc.git'
        post_receive_hooks:
          - logamqp
          - email
          - jenkins
          - jenkinsalldocs
      - name: 'trident-ext-src'
        description: ' package containing all Trident/Pitchfork dependancies.'
        upstream: 'https://github.com/tridentli/trident-ext-src'
        post_receive_hooks:
          - logamqp
          - email
          - jenkins-trident
      - name: 'trident'
        description: 'Trident is a trusted and secure communication platform for enabling better communication between groups of trusted parties https://trident.li'
        upstream: 'https://github.com/tridentli/trident'
        post_receive_hooks:
          - logamqp
          - email
          - jenkins-trident
      - name: 'pitchfork'
        description: 'Golang framework for secure communication platforms.'
        upstream: 'https://github.com/tridentli/pitchfork'
        post_receive_hooks:
          - logamqp
          - email
          - jenkins-trident
    jenkins_repo_url: "deb https://pkg.jenkins.io/debian-stable binary/"
    jenkins_repo_key_url: https://pkg.jenkins.io/debian-stable/jenkins.io.key
    jenkins_pkg_url: https://pkg.jenkins.io/debian-stable/binary
    jenkins_version: '2.107.2'
    jenkins_package_state: present
    jenkins_connection_delay: 5
    jenkins_connection_retries: 60
    jenkins_groups:
      - 'www-data'
      - 'sudo'
      - 'docker'
    jenkins_home: /var/lib/jenkins
    jenkins_hostname: localhost
    jenkins_port: 8080
    jenkins_ssh_port: 8022
    jenkins_cloud_name: 'docker-local'
    jenkins_slave_agent_port: 38023
    jenkins_slave_image: 'jenkins-slave:latest'
    jenkins_slave_label: 'docker.local.jenkins.slave'
    jenkins_slave_name: 'docker.local'
    jenkins_slave_docker_url: 'tcp://{{ docker_api_listen_address }}:{{ docker_api_port }}'
    jenkins_slave_docker_remote_fs: '/home/jenkins'
    jenkins_slave_docker_volumes: 'jenkins_home:/home/jenkins'
    jenkins_slave_docker_pull_strategy: 'pull_latest'
    jenkins_slave_docker_registry: '127.0.0.1'
    jenkins_slave_docker_registry_credentials: ''
    jenkins_slave_java_opts: '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap'
    jenkins_slave_docker_environment: 'JAVA_OPTS="{{ jenkins_slave_java_opts }}"'
    jenkins_context_path: '/jenkins'
    jenkins_jar_location: "{{ jenkins_home }}/jenkins-cli.jar"
    jenkins_cli: 'ssh -p {{ jenkins_ssh_port }} -l {{ jenkins_admin_username }} {{ jenkins_hostname }}'
    # This label gets applied to the master node. Node selectors ("build_node")
    # below enable slave builds.
    jenkins_labels:
      - 'master'
      #- '{{ ansible_lsb.codename }}'
      #- '{{ ansible_architecture }}'
      #- '{{ (ansible_architecture == "x86_64")|ternary("amd64","not_amd64") }}' # For Trident label, until changed
    # To pin to a specific version use format: 'ssh-slaves:1.24'
    jenkins_plugins:
      - ant
      - ansicolor
      - antisamy-markup-formatter
      - blueocean
      - build-name-setter
      - copyartifact
      - credentials
      #- docker-plugin
      #- docker-custom-build-environment
      - digitalocean-plugin
      - envinject
      - external-monitor-job
      - git
      - git-client
      - git-parameter
      - greenballs
      - google-login
      - javadoc
      - jclouds-jenkins
      - job-dsl
      - junit
      - ldap
      - mailer
      - matrix-auth
      - matrix-project
      - maven-plugin
      - nodejs
      - pam-auth
      - parameterized-trigger
      - postbuild-task
      - publish-over-ssh
      - scm-api
      - script-security
      - shiningpanda
      - ssh-agent
      - ssh-credentials
      - ssh-slaves
      - timestamper
      - token-macro
      - translation
      - ws-cleanup
      - yet-another-docker-plugin
    jenkins_url_prefix: "/jenkins"
    jenkins_java_options: "-Djenkins.install.runSetupWizard=false -Djenkins.CLI.disabled=true"
    jenkins_plugin_updates_expiration: 86400
    jenkins_plugin_timeout: 60

    jenkins_admin_username: admin
    jenkins_admin_email: 'dave.dittrich@gmail.com'
    # Set in ~/.secrets directory as appropriate
    #jenkins_admin_password: "admin"
    #jenkins_admin_password_file: ""
    #jenkins_admin_token: "" # "07ce05c0b5209c43ce434231b2c90866"
    #jenkins_admin_token_file: ""

    # For cli_config.yml and its templates
    jenkins_admin_users:
      - 'admin'

    jenkins_authorized_keys:
      - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzOjVtRJ/ultZHmOGGh6hMB8Z9bhj+HecrDc13AAVpB5y2lDdg+QaBSqx4JorWFObuORfvNxFbhBObhOyTwcyHaZgF7B74mveAW4Bae5BdupaG6A394LTPG6c5GCqOiXJzk7keYa3cRVkaQQdPKsKMRfVY86uHQTMpWL3jdng7Mdb/GQOifP21HZYpAH7BmOp/5rLfLwofLbhj1bhLoJWnGfzYPhFzmbGKnMP1vcbhqXd+zmgcjpn7ncPaqTsXuoZcdLv2jj9AANxl1yDdlYoRX1mvoTaokjCvdz85DDGrI2YQwVochsSvu6/SoeoZqzkG2Qp8KuUff4sv4H4cjXEt ansible@orange'
      - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCmSPVxJ7/uEMDm0LssAhmPyyK6y+2StfBN1EC8cPgiuUKs18iYMxa6Ou+R4bO1dETbJSIT11dCSvIYWoYtvaEWZPfdA3ZnkrWXxyjlGL8XbjPW9G/O4/vLRqmNmQIKjvBbrDCL+/Jpz4iaKe7yXCjzulwOlwUueM6rv2TEKUOyHGVZY1irSbE/HypVHMeH0a98yI8SrQwlXCHWZJcIUgKTmRnvtnA7RdjDE+jfbc5wXimcKQs8nQycCmGWMkUJFELZR6Cz10fCzTxiuqWnzZSqMbMku/2SHbgwO45dtgsI4WzJzCCgQ5il8C7NMKrjuCSluuVC6YwrvwZ0FW0ZfkHL ansible-generated on orange'
    jenkins_process_user: jenkins
    jenkins_process_group: '{{ jenkins_process_user }}'

    jenkins_init_changes:
      - option: 'JENKINS_ARGS'
        value: '--prefix={{ jenkins_url_prefix }}'
      - option: '{{ jenkins_java_options_env_var }}'
        value: '{{ jenkins_java_options }}'

    jenkins_job_params:
      'build-rpc-prod':
        repo_url: 'https://github.com/davedittrich/prisem-rpc.git'
        repo_branch: 'master'
        build_node: 'docker.local.jenkins.slave'
      'build-rpc-develop':
        repo_url: 'https://github.com/davedittrich/prisem-rpc.git'
        repo_branch: 'develop'
        build_node: 'docker.local.jenkins.slave'
      'deploy-rpc-prod':
        playbooks_url: 'https://github.com/davedittrich/ansible-dims-playbooks.git'
        private_url: 'git@git.devops.develop:/opt/git/private-{{ deployment }}.git'
        repo_url: 'https://github.com/davedittrich/prisem-rpc.git'
        repo_branch: 'master'
      'deploy-rpc-develop':
        playbooks_url: 'git@git.devops.develop:/opt/git/ansible-dims-playbooks.git'
        private_url: 'git@git.devops.develop:/opt/git/private-{{ deployment }}.git'
        repo_url: 'https://github.com/davedittrich/prisem-rpc.git'
        repo_branch: 'develop'
      'pitchfork':
        project_url: 'https://github.com/tridentli/pitchfork'
        repo_url: 'https://github.com/tridentli/pitchfork.git'
        repo_branch: '{{ pitchfork_repo_branch }}'
        repo_credentials: ''
        build_node: 'docker.local.jenkins.slave'
      'pitchfork-data':
        project_url: 'https://github.com/tridentli/pitchfork'
        repo_url: 'https://github.com/tridentli/pitchfork.git'
        repo_branch: '{{ trident_repo_branch }}'
        repo_credentials: ''
        build_node: 'docker.local.jenkins.slave'
      'trident':
        project_url: 'https://github.com/tridentli/trident'
        repo_url: 'https://github.com/tridentli/trident.git'
        #repo_url: '/opt/git/trident.git'
        repo_branch: '{{ trident_repo_branch }}'
        repo_credentials: ''
        build_node: 'docker.local.jenkins.slave'
      'trident_32':
        project_url: 'https://github.com/tridentli/trident'
        repo_url: 'https://github.com/tridentli/trident.git'
        #repo_url: '/opt/git/trident.git'
        repo_branch: '{{ trident_repo_branch }}'
        repo_credentials: ''
        build_node: 'docker.local.jenkins.slave'
      'trident-ext-src':
        project_url: 'https://github.com/tridentli/trident-ext-src'
        repo_url: 'https://github.com/tridentli/trident-ext-src.git'
        repo_branch: 'master'
        repo_credentials: ''
        build_node: 'docker.local.jenkins.slave'
    jenkins_bootstrap_jobs:
      - 'build dockerbuild -p IMAGE=jenkins-slave -p BRANCH=develop'
      - 'build build-parameterized -p REPO={{ jenkins_job_params["build-rpc-develop"].repo_url }} -p BRANCH={{ jenkins_job_params["build-rpc-develop"].repo_branch }}'
  hosts:
    'green':
      nginx_source_dir: '/var/www/source'
      cronjobs:
        - name: 'source index'
          weekday: '*'
          hour: '*'
          minute: '*'
          user: 'jenkins'
          job: 'ls -l {{ nginx_source_dir }} | egrep -v "^total| index.txt" > {{ nginx_source_dir }}/index.txt'

# vim: ft=ansible :
