---

# 000_cross_env_vars

# NOTE(dittrich): The DIMS Project formerly followed the Fedora Project's
# Asible playbooks design methodology, which had a "vars/global.yml" file
# that all playbooks "include:"d at the top. This means these variables
# are only defined at run-time during "ansible-playbook" execution, not
# when using "ansible" (ad-hoc mode), unless you would manually include
# the file on the command line. The newer "environments/" inventory model
# that includes this file (linked so as to be loaded across all environments)
# better implements global variables that are consistently available from
# both "ansible-playbook" and "ansible".  For that reason, "vars/global.yml"
# variables are being moved here and that file is being phased out.

dims_os_id: '{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}'
dims_adminemail: '{{ lookup("pipe", "git config user.email")|default("") }}'

# Legacy DIMS directory path variables.
# These complement the Fedora model set above. Be aware of
# the existence of both sets when choosing to use (or add)
# a variable to reference a location.
# TODO(dittrich): Replace this with one dictionary

dims: '/opt/dims'
dims_bin:        '{{ dims }}/bin'
dims_data:       '{{ dims }}/data'
dims_deploy:     '{{ dims }}/deploy'
dims_docs:       '{{ dims }}/docs'
dims_etc:        '{{ dims }}/etc'
dims_etc_bashrc: '{{ dims_etc }}/bashrc.dims.d'
dims_git:        '{{ dims }}/git'
dims_lib:        '{{ dims }}/lib'
dims_tests:      '{{ dims }}/tests.d'
dims_triggers:   '{{ dims }}/triggers.d'
dims_logmon:     '{{ dims_data }}/logmon'
dims_src:        '{{ dims }}/src'

# dims_desktop_dirs = [ a,b,c,d ]
#
# Server directories
# dims_server_dirs = [ a,b,c,d,s ]
dims_srv:     '{{ dims }}/srv'

# Create a dims_dirs array with the above...
# Note: Hasn't been broken out into desktop/server yet
# Note: Make sure that the list of directories created here matches those
# being tested for in $GIT/dims-ci-utils/dims/test.dims-ci-utils.envcheck.

dims_dirs:
  - '{{ dims_bin }}'
  - '{{ dims_data }}'
  - '{{ dims_deploy }}'
  - '{{ dims_docs }}'
  - '{{ dims_etc }}'
  - '{{ dims_etc_bashrc }}'
  - '{{ dims_git }}'
  - '{{ dims_lib }}'
  - '{{ dims_tests }}'
  - '{{ dims_triggers }}'
  - '{{ dims_logmon }}'
  - '{{ dims_src }}'
  - '{{ dims_srv }}'

# Fedora project uses absolute paths. That works using a control host that is
# separate from a development host (which the DIMS project developers were
# doing.) The latter involves unique paths derived from $HOME (or including
# different path components with the users' names, which makes things more
# complicated in shared code, or with the way we create Vagrants.
#basedir: /srv/web/infra/ansible
basedir: '{{ playbooks_root|default(lookup("env", "PBR")) }}'
# The private directory is handled differently than other DIMS directories.
private: '{{ dims }}/private'
bigfiles: '{{ basedir }}/bigfiles'
files: '{{ basedir }}/files'
roles_path: '{{ basedir }}/roles'
handlers_path: '{{ basedir }}/handlers'
tasks_path: '{{ basedir }}/tasks'
vars_path: '{{ basedir }}/vars'
patches: '{{ basedir }}/files/patches'
imported_roles:  '{{ dims_etc }}/ansible_roles'
imported_plugins: '{{ dims_etc }}/ansible_plugins'

vm: '/vm'
dist_tag: 'unknown'

# These are global variables that are defined here for one
# of two reasons: (1) To provide an undefined variable that
# exists (to allow templating to not fail), or (2) to provide
# an truly global variable that applies to any DIMS instance
# (regardless of who/what/where/when/why it exists: in other
# words, these varialbes should have NO specificity at all.)
#

# Use this variable for checking for existence of an undefined
# variable. (Differences in the way "undefined" is defined
# can cause problems due to coupling of the value to the concept
# of "undefined", which can vary from programmer to programmer.)

UNDEFINED: '__UNDEFINED__'

# TODO(dittrich): Candidate for retirement?
ansible_python_virtualenv: '/opt/dims/envs/dimsenv'

# Put these here for now to allow Jenkins build jobs to work.
verbose: false
debug: false
_no_log: true

# Set a default timezone so that the common role works properly.
# Override on the command line for local install with '-e dims_timezone="US/New_York"'
dims_timezone: 'US/Pacific'
dims_version: '3.6.2'
dims_guid: '{{ ansible_cmdline.root }}'
dims_marker: '{{ dims_deploy }}/LAST_PROVISIONED'
dims_user: 'dims'
dims_group: 'dims'
# This array should be set on a per category+deployment and/or host level
dims_users: [ ]

# Leave this until we can refactor variables (see dims-230)
deploy_dir: '{{ dims_deploy }}'

# ansible.cfg configuration variables
ansibleForks: 5
ansiblePollInterval: 15
ansibleRemotePort: 8422
ansibleModuleLang: 'C'
ansibleSSHTimeout: 10
ansibleRemoteUser: 'ansible'
ansibleNoCows: 1
ansibleSSHArgs: '-o UseRoaming=no'
ansibleAcceleratePort: 5099
ansibleAccelerateTimeout: 30
ansibleAccelerateConnectTimeout: '5.0'
ansibleAccelerateDaemonTimeout: 30

# Defaults for rsyslog logging to facilitate central logging and
# debugging services.
syslog_facility: 'local0'
syslog_severity: 'info'

packer_ssh_timeout: '60m'

root_user: 'root'
root_group: 'root'

# vim: ft=ansible :
