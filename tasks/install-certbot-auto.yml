---

# File: tasks/install-certbot-auto.yml

- name: Define _certbot_auto
  set_fact:
    _certbot_auto: '{{ dims_bin }}/certbot-auto'

- name: Define certbot_auto_renew_options
  set_fact:
    certbot_auto_renew_options: "--quiet --no-self-upgrade"
  when: certbot_auto_renew_options is not defined

# NOTE: Not DRY -- yanked from pre_tasks.yml
- name: Create task deploy directory
  file:
    state: directory
    path: '{{ dims_deploy }}/certbot'
    mode: 0o775
    owner: '{{ dims_user }}'
    group: '{{ dims_group }}'
  become: yes
  become_user: '{{ dims_user }}'

- name: Ensure GPG is set up
  shell: 'gpg --list-keys 2>/dev/null >/dev/null'
  become: yes

- name: Check to see if EFF public key is available
  shell:
    gpg2 --list-key A2CFB51FA275A7286234E7B24D17C995CD9775F2
  become: yes
  register: gpg

- name: Ensure EFF public key is imported
  shell:
    gpg2 --keyserver hkp://pool.sks-keyservers.net --recv-keys A2CFB51FA275A7286234E7B24D17C995CD9775F2
  become: yes
  when: gpg.stdout is search('No public key')

- name: Obtain current 'certbot-auto' binary
  get_url:
    url: 'https://dl.eff.org/certbot-auto'
    dest: '{{ dims_deploy }}/certbot/certbot-auto'
  become: yes

- name: Obtain current 'certbot-auto' signature
  get_url:
    url: 'https://dl.eff.org/certbot-auto.asc'
    dest: '{{ dims_deploy }}/certbot/certbot-auto.asc'
  become: yes

- name: Check signature of certbot-auto binary
  shell: 'gpg2 --verify --trusted-key 4D17C995CD9775F2 {{ dims_deploy }}/certbot/certbot-auto.asc {{ dims_deploy }}/certbot/certbot-auto'
  become: yes

- name: Ensure certbot-auto is in PATH
  copy:
    remote_src: true
    src: '{{ dims_deploy }}/certbot/certbot-auto'
    dest: '{{ _certbot_auto }}'
    owner: 'root'
    group: 'root'
    mode: 0o755
  become: yes

- name: Add cron job for certbot renewal.
  cron:
    name: Certbot automatic renewal.
    job: '{{ _certbot_auto }} renew {{ certbot_auto_renew_options }}'
    minute: '{{ certbot_auto_renew_minute }}'
    hour: '{{ certbot_auto_renew_hour }}'
    user: '{{ certbot_auto_renew_user }}'
  become: yes
  when: certbot_auto_renew_minute is defined and
        certbot_auto_renew_hour is defined and
        certbot_auto_renew_user is defined and
        certbot_auto_renew_options is defined

# NOTE: Not DRY, see first task
- name: Remove task deploy directory
  file:
    state: absent
    path: '{{ dims_deploy }}/certbot'
  become: yes
  become_user: '{{ dims_user }}'

# vim: ft=ansible :
