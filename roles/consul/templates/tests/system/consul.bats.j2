#!/usr/bin/env bats
#
# {{ ansible_managed }} [ansible-playbooks v{{ ansibleplaybooks_version }}]
#
# vim: set ts=4 sw=4 tw=0 et :

load helpers

function setup() {
	source $DIMS/bin/dims_functions.sh
}

@test "[S][EV] consul is {{ dims_bin }}/consul" {
{% if groups.consul is not defined or not inventory_hostname in groups.consul %}
    skip "Host is not in groups.consul"
{% endif %}
    is_coreos && skip "Not applicable on CoreOS"
    assert "consul is {{ dims_bin }}/consul" type consul
}

@test "[S][EV] consul service is running" {
{% if groups.consul is not defined or not inventory_hostname in groups.consul %}
    skip "Host is not in groups.consul"
{% endif %}
    is_coreos && skip "Not applicable on CoreOS"
    run bash -c "ps aux | grep -q 'consul agent'"
	[ $status -eq 0 ]
}

@test "[S][EV] consul version is {{ consul_version }}" {
{% if groups.consul is not defined or not inventory_hostname in groups.consul %}
    skip "Host is not in groups.consul"
{% endif %}
    is_coreos && skip "Not applicable on CoreOS"
    assert '{{ consul_version }}' bash -c "consul version | awk -Fv '/Consul/ { print \$2; }'"
}

@test "[S][EV] systemd consul service file exists" {
    ! is_coreos && skip "Only applicable on CoreOS"
    [ -f /etc/systemd/system/consul.service ]
}

@test "[S][EV] systemd consul-join service file exists" {
    ! is_coreos && skip "Only applicable on CoreOS"
    [ -f /etc/systemd/system/consul-join.service ]
}

@test "[S][EV] Consul docker container exists" {
    ! is_coreos && skip "Only applicable on CoreOS"
    docker ps | grep -q consul-$(hostname)
    [ $? -eq 0 ]
}
