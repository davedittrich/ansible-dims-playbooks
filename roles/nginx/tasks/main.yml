---

# File: roles/nginx/tasks/main.yml

- include: '{{ tasks_path }}/pre_tasks.yml'
  tags: [ nginx, packages, config ]

# Letsencrypt support
- include: '{{ tasks_path }}/install-certbot-certs.yml'
  when: use_letsencrypt is defined and use_letsencrypt|bool
  tags: [ nginx, packages ]

# Following instructions from http://nginx.org/en/linux_packages.html
- name: Import repository signing key
  apt_key:
    id: ABF5BD827BD9BF62
    url: http://nginx.org/keys/nginx_signing.key
    state: present
  become: yes
  tags: [ nginx, packages ]

- name: Make deb sources present
  apt_repository:
    repo: '{{ item }}'
    state: present
    update_cache: yes
  with_items:
    - deb http://nginx.org/packages/{{ ansible_lsb.id | lowercase }}/ {{ ansible_lsb.codename }} nginx
    - deb-src http://nginx.org/packages/{{ ansible_lsb.id | lowercase }}/ {{ ansible_lsb.codename }} nginx
  become: yes
  tags: [ nginx, packages ]

- name: Only "update_cache=yes" if >3600s since last update
  apt:
    update_cache: yes
    cache_valid_time: 3600
  when: ansible_os_family == "Debian"
  become: yes
  tags: [ nginx, packages ]

- name: Make Nginx present
  apt:
    name: nginx
    state: present
    dpkg_options: 'force-confold,force-confdef'
  when: ansible_os_family == "Debian"
  become: yes
  notify: restart nginx
  tags: [ nginx, packages ]

- name: Ensure nginx sites directories exist
  file:
    path: '{{ item }}'
    state: directory
    owner: "{{ root_user }}"
    group: "{{ root_group }}"
    mode: '{{ mode_0755 }}'
  with_items:
    - /etc/nginx/sites-available
    - /etc/nginx/sites-enabled
  become: yes
  tags: [ nginx, config ]

- name: Configure Nginx
  template:
    src: '{{ item }}'
    dest: /etc/nginx/nginx.conf
    owner: '{{ root_user }}'
    group: '{{ root_group }}'
    mode: '{{ mode_0644 }}'
  with_first_found:
    - files:
        - '{{ nginx_conf }}'
        - nginx.conf.{{ inventory_hostname }}.j2
        - nginx.conf.category-{{ category }}.j2
        - nginx.conf.deployment-{{ deployment }}.j2
        - nginx.conf.j2
      paths:
        - '{{ dims_private }}/roles/{{ role_name }}/templates/nginx/'
        - nginx/
  become: yes
  notify: restart nginx
  tags: [ nginx, config ]

- name: Ensure nginx is enabled
  service: name=nginx enabled=yes
  become: yes
  tags: [ nginx, packages ]

- name: Define nginx_sites_available variable
  set_fact:
    nginx_sites_available: '{{ _nginx_sites_available }}'
  when: nginx_sites_available is not defined
  tags: [ nginx, config ]

  # Ansible does not support nested loops of with_items
  # wrapping with_first_found. We are using with_first_found
  # to enable generalization of templates across groups,
  # and we want to use an array of sites_available and
  # sites_enabled. This requires looping using with_items
  # to include a task that then performs the with_first_found.
  # This only works with Ansible >2.1 and its dynamic
  # inclusion behavior.
- name: Install sites in nginx_sites_available
  include: 'install-site-available.yml'
  static: no
  with_items:
    - '{{ nginx_sites_available }}'
  loop_control:
    loop_var: _sitename
  become: yes
  tags: [ nginx, config ]

- name: Define nginx_sites_enabled variable
  set_fact:
    nginx_sites_enabled: '{{ nginx_sites_enabled|default(_nginx_sites_enabled) }}'
  tags: [ nginx, config ]

- name: Create symlinks to nginx_sites_enabled
  file:
    src: '/etc/nginx/sites-available/{{ item }}'
    dest: '/etc/nginx/sites-enabled/{{ item }}'
    state: link
  with_items:
    - '{{ nginx_sites_enabled }}'
  become: yes
  ignore_errors: yes
  notify: restart nginx
  tags: [ nginx, config ]

- name: Create health_check directory if selected
  file:
    path: '/var/www/health_check'
    state: directory
    owner: '{{ dims_user }}'
    group: '{{ dims_group }}'
    mode: '{{ mode_0755 }}'
  when: '"health_check" in nginx_sites_available'
  become: yes
  tags: [ nginx, config ]

- name: Set up health_check site if selected
  template:
    src: '{{ item }}'
    dest: /var/www/health_check/index.html
    owner: '{{ root_user }}'
    group: '{{ root_group }}'
    mode: '{{ mode_0644 }}'
  with_first_found:
    - files:
        - '{{ nginx_index }}'
        - index.html.{{ inventory_hostname }}.j2
        - index.html.category-{{ category }}.j2
        - index.html.deployment-{{ deployment }}.j2
        - index.html.j2
      paths:
        - '{{ dims_private }}/roles/{{ role_name }}/templates/html/'
        - html/
  become: yes
  when: '"health_check" in nginx_sites_available'
  notify: restart nginx
  tags: [ nginx, config ]

# https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-14-04
- name: Generate Strong Diffie-Hellman Group
  shell: "openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048"
  become: yes
  tags: [ nginx, config ]

- name: Make defined bats tests present
  include: '{{ tasks_path }}/bats-tests.yml'
  tags: [ nginx, tests ]

- include: '{{ tasks_path }}/post_tasks.yml'
  tags: [ nginx, packages, config ]

# vim: ft=ansible :
