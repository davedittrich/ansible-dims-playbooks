---

# File: roles/nginx/tasks/main.yml

- include: '{{ tasks_path }}/pre_tasks.yml'
  tags: [ nginx, packages, config ]

# Following instructions from http://nginx.org/en/linux_packages.html
- name: Import repository signing key
  apt_key:
    id: ABF5BD827BD9BF62
    url: http://nginx.org/keys/nginx_signing.key
    state: present
  become: yes
  when: ansible_os_family == "Debian"
  tags: [ nginx, packages ]

- name: Make deb sources present
  apt_repository:
    repo='{{ item }}'
    state=present
    update_cache=yes
  with_items:
    - deb http://nginx.org/packages/{{ ansible_lsb.id | lowercase }}/ {{ ansible_lsb.codename }} nginx
    - deb-src http://nginx.org/packages/{{ ansible_lsb.id | lowercase }}/ {{ ansible_lsb.codename }} nginx
  become: yes
  when: ansible_os_family == "Debian"
  tags: [ nginx, packages ]

- name: Only "update_cache=yes" if >3600s since last update
  apt: update_cache=yes cache_valid_time=3600
  when: ansible_os_family == "Debian"
  become: yes
  tags: [ nginx, packages ]

- name: Make nginx present
  apt: name=nginx state=present dpkg_options='force-confold,force-confdef'
  when: ansible_os_family == "Debian"
  become: yes
  notify: restart nginx
  tags: [ nginx, packages ]

- name: Configure Nginx
  template:
    src: '{{ item }}'
    dest: /etc/nginx/nginx.conf
    owner: '{{ root_user }}'
    group: '{{ root_group }}'
    mode: '{{ mode_0644 }}'
  when: ansible_os_family == "Debian"
  with_first_found:
    - files:
        - '{{ nginx_conf }}'
        - nginx.conf.{{ inventory_hostname }}.j2
        - nginx.conf.category-{{ category }}.j2
        - nginx.conf.deployment-{{ deployment }}.j2
        - nginx.conf.j2
      paths:
        - '{{ dims_custom }}/roles/{{ role_name }}/templates/nginx/'
        - nginx/
  become: yes
  notify: restart nginx
  tags: [ nginx, config ]

- name: Configure health check server directive
  template:
    src: '{{ item }}'
    dest: /etc/nginx/conf.d/health_check.conf
    owner: '{{ root_user }}'
    group: '{{ root_group }}'
    mode: '{{ mode_0644 }}'
  when: ansible_os_family == "Debian"
  with_first_found:
    - files:
        - '{{ directive_nginx_conf }}'
        - health_check.conf.{{ inventory_hostname }}.j2
        - health_check.conf.category-{{ category }}.j2
        - health_check.conf.deployment-{{ deployment }}.j2
        - health_check.conf.j2
      paths:
        - '{{ dims_custom }}/roles/{{ role_name }}/templates/nginx_confd/'
        - nginx_confd/
  become: yes
  notify: restart nginx
  tags: [ nginx, config ]

- name: Make default directories present
  file:
    path: '{{ item }}'
    state: directory
    owner: '{{ dims_user }}'
    group: '{{ dims_group }}'
    mode: '{{ mode_0755 }}'
  with_items:
    - /var/www/health_check
  become: yes
  tags: [ nginx, config ]

- name: Make base Nginx configuration present
  template:
    src: '{{ item }}'
    dest: /var/www/health_check/index.html
    owner: '{{ root_user }}'
    group: '{{ root_group }}'
    mode: '{{ mode_0644 }}'
  when: ansible_os_family == "Debian"
  with_first_found:
    - files:
        - '{{ nginx_index }}'
        - index.html.{{ inventory_hostname }}.j2
        - index.html.category-{{ category }}.j2
        - index.html.deployment-{{ deployment }}.j2
        - index.html.j2
      paths:
        - '{{ dims_custom }}/roles/{{ role_name }}/templates/html/'
        - html/
  become: yes
  notify: restart nginx
  tags: [ nginx, config ]

- name: Remove default sites-enabled file
  file: path=/etc/nginx/sites-enabled/default state=absent
  when: ansible_os_family == "Debian"
  become: yes
  notify: restart nginx
  tags: [ nginx, config ]

# Letsencrypt support
- include: '{{ tasks_path }}/install-certbot-auto.yml'
  when: use_letsencrypt is defined and use_letsencrypt
  tags: [ nginx, packages ]

# https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-14-04
- name: Generate Strong Diffie-Hellman Group
  shell: "openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048"
  become: yes
  tags: [ nginx, config ]

- name: Ensure nginx is running and enabled
  service: name=nginx state=running enabled=yes
  become: yes
  tags: [ nginx, packages ]

- name: Make defined bats tests present
  include: '{{ tasks_path }}/bats-tests.yml'
  tags: [ nginx, tests ]

- include: '{{ tasks_path }}/post_tasks.yml'
  tags: [ nginx, packages, config ]

# vim: ft=ansible :
