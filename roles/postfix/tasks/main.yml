---

# File: roles/postfix/tasks/main.yml
- name: Define postfix_postmaster
  set_fact:
    postfix_postmaster: '{{ dims_adminemail|default(ansible_user_id + "@" + dims_fqdn) }}'
  tags: [ always ]

- import_tasks: "{{ tasks_path }}/pre_tasks.yml"
  tags: [ postfix, config, opendkim, packages, tests ]

- name: Only "update_cache=yes" if >3600s since last update
  apt: update_cache=yes cache_valid_time=3600
  when: ansible_pkg_mgr == "apt"
  become: yes
  tags: [ postfix, packages ]

- name: Make related mail utilities present (APT)
  apt:
    name={{ item }}
    state=present
    force=yes
    dpkg_options='force-confold,force-confdef'
  with_items:
    - mailutils
    - alpine
    - opendkim
    - opendkim-tools
    - postfix-policyd-spf-python
    - postfix-pcre
  when: ansible_pkg_mgr == "apt"
  become: yes
  tags: [ postfix, packages ]

- name: enable postfix to start
  service: name=postfix state=started enabled=yes
  tags: [ postfix, config ]

- name: Make related mail utilities present (yum)
  yum:
    name={{ item }}
    state=present
  with_items:
    - mailx
    - alpine
  when: ansible_pkg_mgr == "yum"
  become: yes
  tags: [ postfix, packages ]

- name: Make /var/mail directory permissions present
  file:
    path: '/var/mail'
    state: directory
    owner: root
    group: mail
    mode: 0o1777
    follow: yes
  become: yes
  tags: [ postfix, packages ]

- name: Make /etc/aliases file present
  template:
    src: '{{ item }}'
    dest: /etc/aliases
    owner: '{{ root_user }}'
    group: '{{ root_group }}'
    mode: 0o644
  with_first_found:
    - files:
        - '{{ postfix_aliases }}'
        - aliases.{{ inventory_hostname }}.j2
        - aliases.{{ host_group }}.j2
        - aliases.{{ postfix_group }}.j2
        - aliases.deployment-{{ deployment }}.j2
        - aliases.j2
      paths:
        - '{{ dims_private }}/roles/{{ role_name }}/templates/aliases/'
        - aliases/
  become: yes
  notify:
    - rebuild postfix aliases
    - restart postfix
  tags: [ postfix, config ]

- name: Make /etc/postfix/virtual file present
  template:
    src: '{{ item }}'
    dest: /etc/postfix/virtual
    owner: '{{ root_user }}'
    group: '{{ root_group }}'
    mode: 0o644
  with_first_found:
    - files:
        - '{{ postfix_virtual }}'
        - virtual.{{ inventory_hostname }}.j2
        - virtual.{{ host_group }}.j2
        - virtual.{{ postfix_group }}.j2
        - virtual.deployment-{{ deployment }}.j2
        - virtual.j2
      paths:
        - '{{ dims_private }}/roles/{{ role_name }}/templates/virtual/'
        - virtual/
  become: yes
  notify:
    - rebuild postfix virtual
    - restart postfix
  tags: [ postfix, config ]

- name: Make /etc/postfix/transport file present
  template:
    src: '{{ item }}'
    dest: /etc/postfix/transport
    owner: '{{ root_user }}'
    group: '{{ root_group }}'
    mode: 0o644
  with_first_found:
    - files:
        - '{{ postfix_transport }}'
        - transport.{{ inventory_hostname }}.j2
        - transport.{{ host_group }}.j2
        - transport.{{ postfix_group }}.j2
        - transport.j2
      paths:
        - '{{ dims_private }}/roles/{{ role_name }}/templates/transport/'
        - transport/
  become: yes
  notify:
    - rebuild postfix transport
    - restart postfix
  tags: [ postfix, config ]

- name: Make /etc/postfix/generic file present
  template:
    src: '{{ item }}'
    dest: /etc/postfix/generic
    owner: '{{ root_user }}'
    group: '{{ root_group }}'
    mode: 0o644
  with_first_found:
    - files:
        - '{{ postfix_generic }}'
        - generic.{{ inventory_hostname }}.j2
        - generic.{{ host_group }}.j2
        - generic.{{ postfix_group }}.j2
        - generic.j2
      paths:
        - '{{ dims_private }}/roles/{{ role_name }}/templates/generic/'
        - generic/
  become: yes
  notify:
    - rebuild postfix generic
    - restart postfix
  tags: [ postfix, config ]

- name: Make /etc/postfix/access file present
  template:
    src: '{{ item }}'
    dest: /etc/postfix/access
    owner: '{{ root_user }}'
    group: '{{ root_group }}'
    mode: 0o644
  with_first_found:
    - files:
        - '{{ postfix_access }}'
        - access.{{ inventory_hostname }}.j2
        - access.{{ host_group }}.j2
        - access.{{ postfix_group }}.j2
        - access.deployment-{{ deployment }}.j2
        - access.j2
      paths:
        - '{{ dims_private }}/roles/{{ role_name }}/templates/access/'
        - access/
  become: yes
  notify:
    - rebuild postfix access
    - restart postfix
  tags: [ postfix, config ]

- name: Make /etc/postfix/client_access file present
  template:
    src: '{{ item }}'
    dest: /etc/postfix/client_access
    owner: '{{ root_user }}'
    group: '{{ root_group }}'
    mode: 0o644
  with_first_found:
    - files:
        - '{{ postfix_client_access }}'
        - client_access.{{ inventory_hostname }}.j2
        - client_access.{{ host_group }}.j2
        - client_access.{{ postfix_group }}.j2
        - client_access.deployment-{{ deployment }}.j2
        - client_access.j2
      paths:
        - '{{ dims_private }}/roles/{{ role_name }}/templates/client_access/'
        - client_access/
  become: yes
  notify:
    - rebuild postfix client_access
    - restart postfix
  tags: [ postfix, config ]

- name: Make /etc/postfix/helo_access file present
  template:
    src: '{{ item }}'
    dest: /etc/postfix/helo_access
    owner: '{{ root_user }}'
    group: '{{ root_group }}'
    mode: 0o644
  with_first_found:
    - files:
        - '{{ postfix_helo_access }}'
        - helo_access.{{ inventory_hostname }}.j2
        - helo_access.{{ host_group }}.j2
        - helo_access.{{ postfix_group }}.j2
        - helo_access.deployment-{{ deployment }}.j2
        - helo_access.j2
      paths:
        - '{{ dims_private }}/roles/{{ role_name }}/templates/helo_access/'
        - helo_access/
  become: yes
  notify:
    - rebuild postfix helo_access
    - restart postfix
  tags: [ postfix, config ]

- name: Make /etc/postfix/relay_recipients file present
  template:
    src={{ item }}
    dest=/etc/postfix/relay_recipients
    owner={{ root_user }}
    group={{ root_group }}
    mode=0o644
  with_first_found:
    - files:
        - "{{ postfix_relay_recipients }}"
        - relay_recipients.{{ inventory_hostname }}.j2
        - relay_recipients.{{ host_group }}.j2
        - relay_recipients.{{ postfix_group }}.j2
        - relay_recipients.deployment-{{ deployment }}.j2
        - relay_recipients.j2
      paths:
        - relay_recipients/
  become: yes
  notify:
    - rebuild postfix relay_recipients
    - restart postfix
  tags: [ postfix, config ]

- name: Make /etc/postfix/main.cf present
  template:
    src: '{{ item }}'
    dest: /etc/postfix/main.cf
    owner: '{{ root_user }}'
    group: '{{ root_group }}'
    mode: 0o644
  with_first_found:
    - files:
        - '{{ postfix_maincf }}'
        - main.cf.{{ inventory_hostname }}.j2
        - main.cf.{{ host_group }}.j2
        - main.cf.{{ postfix_group }}.j2
        - main.cf.deployment-{{ deployment }}.j2
        - main.cf.j2
      paths:
        - '{{ dims_private }}/roles/{{ role_name }}/templates/main.cf/'
        - main.cf/
  become: yes
  notify:
    - restart postfix
  tags: [ postfix, config ]

- name: Make /etc/postfix/master.cf file present
  template:
    src: '{{ item }}'
    dest: /etc/postfix/master.cf
    owner: '{{ root_user }}'
    group: '{{ root_group }}'
    mode: 0o644
  with_first_found:
    - files:
        - '{{ postfix_mastercf }}'
        - master.cf.{{ inventory_hostname }}.j2
        - master.cf.{{ host_group }}.j2
        - master.cf.{{ postfix_group }}.j2
        - master.cf.j2
      paths:
        - '{{ dims_private }}/roles/{{ role_name }}/templates/master.cf/'
        - master.cf/
  become: yes
  notify:
    - restart postfix
  tags: [ postfix, config ]

- name: Force postmap where necessary
  shell: >
    [ -f '{{ item }}' && -f '{{ item }}'.db ] || postmap '{{ item }}'
    chdir=/etc/postfix
  with_items:
    - access
    - client_access
    - generic
    - helo_access
    - transport
    - virtual
  notify:
    - restart postfix
  tags: [ postfix, config ]

- import_tasks: "opendkim.yml"
  tags: [ postfix, config, opendkim, opendkim_genkeys ]

- import_tasks: "{{ tasks_path }}/post_tasks.yml"
  tags: [ postfix, config, opendkim, packages, tests ]

# vim: ft=ansible :
