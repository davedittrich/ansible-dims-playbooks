---

# This file is modified from https://github.com/karlmdavis/ansible-jenkins2.git
# That repo was released to the public domain.

# Enables the Jenkins CLI and configures the 'admin' account so that it can be
# used to connect to the CLI.

- name: Generate SSH Keys for jenkins Service Account
  user:
    name: jenkins
    generate_ssh_key: yes
  become: true

- name: Read SSH Public Key for jenkins Service Account
  shell: cat {{ jenkins_home }}/.ssh/id_rsa.pub
  become: true
  changed_when: false
  register: jenkins_user_ssh_public_file

- name: Parse SSH Public Key for jenkins Service Account
  set_fact: jenkins_user_ssh_public_key="{{ jenkins_user_ssh_public_file.stdout_lines[0] }}"

# This isn't working. Not sure why, but too much time spent.
# Hacking in admin's config.xml file instead.

#- name: Jenkins Script - Configure SSH Keys for admin
#  template:
#    src: adminSshKeys.groovy
#    dest: '{{ jenkins_home }}/init.groovy.d/adminSshKeys.groovy'
#    owner: jenkins
#    group: jenkins
#    mode: 0755
#  become: true

- name: Install initial Jenkins admin config
  template:
    src: users/admin/config.xml.j2
    dest: '{{ jenkins_home }}/users/admin/config.xml'
    owner: jenkins
    group: jenkins
    mode: 0755
  become: true

- name: Jenkins Script - Refresh Update Center
  template:
    src: updateCenterRefresh.groovy
    dest: '{{ jenkins_home }}/init.groovy.d/updateCenterRefresh.groovy'
    owner: jenkins
    group: jenkins
    mode: 0755
  become: true

- name: Jenkins Script - Configure Docker Plugin
  template:
    src: configureDocker.groovy
    dest: '{{ jenkins_home }}/init.groovy.d/configureDocker.groovy'
    owner: jenkins
    group: jenkins
    mode: 0755
  become: true

- name: Jenkins Script - Configure Slave Agent Port
  template:
    src: slaveAgentPort.groovy
    dest: '{{ jenkins_home }}/init.groovy.d/slaveAgentPort.groovy'
    owner: jenkins
    group: jenkins
    mode: 0755
  become: true

- name: Restart Service 'jenkins'
  service:
    name: jenkins
    state: restarted
  # This is a little hack to run more than one task in a handler.
  # Reference: http://stackoverflow.com/a/31618968/1851299
  become: true

- name: Wait for Jenkins HTTP
  uri:
    url: "http://localhost:{{ jenkins_port }}{{ jenkins_context_path | default('') }}/login"
    status_code: 200
  register: jenkins_login_page
  until: jenkins_login_page.status == 200
  retries: 60
  delay: 1

- name: "Wait for {{ jenkins_ssh_port }}"
  wait_for:
    port: '{{ jenkins_ssh_port }}'
    delay: 5

- name: Remove initial groovy configuration scripts
  file:
    state: absent
    path: '{{ item }}'
  with_items:
  - '{{ jenkins_home }}/init.groovy.d/slaveAgentPort.groovy'
  - '{{ jenkins_home }}/init.groovy.d/adminSshKeys.groovy'
  - '{{ jenkins_home }}/init.groovy.d/updateCenterRefresh.groovy'
  - '{{ jenkins_home }}/init.groovy.d/configureDocker.groovy'
  ignore_errors: yes

# At this point (once the service is restarted), the CLI itself should be usable
# by the 'jenkins' system user (and its SSH keys).

# vim: ft=ansible :
