#!/bin/bash
#
# vim: set ts=4 sw=4 tw=0 et :
#
# {{ ansible_managed }}
#
# Copyright (C) 2014-2017, University of Washington. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# This script provides a simple front end to the Java Jenkins CLI.
# It relies on the password file created in the jenkins secrets/
# directory, which must be readable only to trusted users running
# this script.

. $DIMS/lib/shflags
. $DIMS/bin/dims_functions.sh

# Tracks with bumpversion
VERSION="3.1.0"
PORT=${PORT:-{{ jenkins_ssh_port }}}
ADMIN_USER=${ADMIN_USER:-{{ jenkins_admin_username }}}
IDENTITY=${IDENTITY:-$HOME/.ssh/id_rsa}
JENKINS_HOSTNAME=${JENKINS_HOSTNAME:-{{ jenkins_hostname }}}

FLAGS_HELP="usage: $BASE [options] args"

# Define command line options
DEFINE_boolean 'debug' false 'enable debug mode' 'd'
DEFINE_string 'identity' "${IDENTITY}" 'identity (SSH private key)' 'i'
DEFINE_string 'hostname' "${JENKINS_HOSTNAME}" 'Jenkins host name' 'H'
DEFINE_string 'port' "${PORT}" 'Jenkins SSH service port' 'p'
DEFINE_string 'user' "${ADMIN_USER}" 'Jenkins admin user' 'l'
DEFINE_boolean 'usage' false 'print usage information' 'u'
DEFINE_boolean 'verbose' false 'be verbose' 'v'

usage() {
    flags_help
    cat << EOD

This script serves as a front-end to Jenkins using the
SSH authentication mechanism supported by Jenkins.

{{ ansible_managed }}
EOD
    exit 0
}

main()
{
    dims_main_init

    ssh -p ${FLAGS_port} \
      -l ${FLAGS_user} \
      -i ${FLAGS_identity} \
      ${FLAGS_hostname} \
      $@

    debug "Returning from main()"
    on_exit
    return $?
}

# parse the command-line
FLAGS "$@" || exit $?
eval set -- "${FLAGS_ARGV}"
main "$@"
exit $?
