---

# File: roles/rabbitmq/tasks/main.yml

- include: "{{ tasks_path }}/pre_tasks.yml"
  tags: [ rabbitmq ]

- fail: msg="Installation on {{ ansible_os_family }} is not supported"
  when: ansible_os_family != "Debian"
  tags: [ rabbitmq ]

- name: Define rabbitmq_plugins
  set_fact:
    rabbitmq_plugins: '{{ _rabbitmq_plugins }}'
  when: rabbitmq_plugins is not defined
  tags: [ rabbitmq ]

- name: Define rabbitmq_apt_key
  set_fact:
    rabbitmq_apt_key: '{{ _rabbitmq_apt_key }}'
  when: rabbitmq_apt_key is not defined
  tags: [ rabbitmq ]

- name: Define rabbitmq_apt_repo
  set_fact:
    rabbitmq_apt_repo: '{{ _rabbitmq_apt_repo }}'
  when: rabbitmq_apt_repo is not defined
  tags: [ rabbitmq ]

- name: Define rabbitmq_listen_address
  set_fact:
    rabbitmq_listen_address: '{{ hostvars[inventory_hostname].net.iface[hostvars[inventory_hostname].zone_iface["rabbitmq"]].ip }}'
  when: rabbitmq_listen_address is not defined
  tags: [ rabbitmq ]

- name: Define rabbitmq_etc_default
  set_fact:
    rabbitmq_etc_default: '{{ _rabbitmq_etc_default }}'
  when: rabbitmq_etc_default is not defined
  tags: [ rabbitmq ]

- name: Define erlang_apt_key
  set_fact:
    erlang_apt_key: '{{ _erlang_apt_key }}'
  when: erlang_apt_key is not defined
  tags: [ rabbitmq ]

- name: Define erlang_apt_repo
  set_fact:
    erlang_apt_repo: '{{ _erlang_apt_repo }}'
  when: erlang_apt_repo is not defined
  tags: [ rabbitmq ]

#- name: Define rabbitmq_mgmt_stats_interval
#  set_fact:
#    rabbitmq_mgmt_stats_interval: '{{ _rabbitmq_mgmt_stats_interval }}'
#  when: rabbitmq_mgmt_stats_interval is not defined
#  tags: [ rabbitmq ]

- name: Add rabbitmq repo signing key
  apt_key:
    url: '{{ rabbitmq_apt_key }}'
    state: present
  when: ansible_os_family == "Debian"
  tags: [ rabbitmq ]

- name: Add rabbitmq APT repo
  apt_repository:
    repo: '{{ rabbitmq_apt_repo }}'
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"
  tags: [ rabbitmq ]

- name: Add erlang repo signing key
  apt_key:
    url: '{{ erlang_apt_key }}'
    state: present
  become: yes
  when: ansible_os_family == "Debian"
  tags: [ rabbitmq ]

- name: Add erlang APT repo
  apt_repository:
    repo: '{{ erlang_apt_repo }}'
    state: present
    update_cache: yes
  become: yes
  when: ansible_os_family == "Debian"
  tags: [ rabbitmq ]

- name: Install erlang package
  apt:
    name: 'erlang'
    state: installed
    force: yes
  when: ansible_os_family == "Debian"
  tags: [ rabbitmq ]

- name: Stop rabbitmq-server
  service:
    name: rabbitmq-server
    state: stopped
  become: yes
  ignore_errors: yes
  notify:
  - restart rabbitmq-server
  tags: [ rabbitmq ]

- name: Install rabbitmq-server package
  apt:
    name: 'rabbitmq-server'
    state: installed
    force: yes
  when: ansible_os_family == "Debian"
  tags: [ rabbitmq ]

- name: Make rabbitmq user present in required groups
  user:
    name: rabbitmq
    groups: '{{ dims_user }}'
    state: present
    append: yes
    createhome: no
  with_items:
    - '{{ dims_user }}'
    - ssl-cert
  become: yes
  tags: [ rabbitmq ]

- name: Enable rabbitmq-server
  service:
    name: rabbitmq-server
    enabled: yes
  tags: [ rabbitmq ]

- name: Ensure rabbitmq-server defaults present
  template:
    src: '{{ item }}'
    dest: /etc/default/rabbitmq-server
    owner: '{{ root_user }}'
    group: '{{ root_group }}'
    mode: '{{ mode_0644 }}'
  with_first_found:
    - files:
        - '{{ rabbitmq_server_default }}'
        - rabbitmq-server.{{ inventory_hostname }}.j2
        - rabbitmq-server.category-{{ category }}.j2
        - rabbitmq-server.deployment-{{ deployment }}.j2
        - rabbitmq-server.j2
      paths:
        - '{{ dims_private }}/roles/{{ role_name }}/templates/default/'
        - default/
  become: yes
  tags: [ rabbitmq, config ]

- name: Ensure rabbitmq.config is present
  template:
    src: '{{ item }}'
    dest: '/etc/rabbitmq/rabbitmq.config'
    owner: 'rabbitmq'
    group: 'rabbitmq'
    mode: '{{ mode_0644 }}'
  with_first_found:
    - files:
        - '{{ rabbitmq_server_default }}'
        - rabbitmq.config.{{ inventory_hostname }}.j2
        - rabbitmq.config.category-{{ category }}.j2
        - rabbitmq.config.deployment-{{ deployment }}.j2
        - rabbitmq.config.j2
      paths:
        - '{{ dims_private }}/roles/{{ role_name }}/templates/rabbitmq.config/'
        - default/
  become: yes
  notify:
  - restart rabbitmq-server
  tags: [ rabbitmq ]

- name: Ensure rabbitmq environment config is present
  template:
    src: '{{ item }}'
    dest: '/etc/rabbitmq/rabbitmq-env.conf'
    group: 'rabbitmq'
    owner: 'rabbitmq'
    mode: '{{ mode_0644 }}'
  with_first_found:
    - files:
        - '{{ rabbitmq_server_default }}'
        - rabbitmq-env.conf.{{ inventory_hostname }}.j2
        - rabbitmq-env.conf.category-{{ category }}.j2
        - rabbitmq-env.conf.deployment-{{ deployment }}.j2
        - rabbitmq-env.conf.j2
      paths:
        - '{{ dims_private }}/roles/{{ role_name }}/templates/rabbitmq-env.conf/'
        - default/
  become: yes
  notify: restart rabbitmq-server
  when: rabbitmq_environment is defined
  tags: [ rabbitmq ]

- name: Ensure rabbitmq-server is started
  service:
    name: rabbitmq-server
    state: started
    enabled: true
  become: yes
  tags: [ rabbitmq ]

- name: Remove default guest user
  rabbitmq_user:
    user: guest
    state: absent
  become: yes
  tags: [ rabbitmq ]

- name: Add users
  rabbitmq_user:
    user: '{{ item.name }}'
    password: '{{ item.password }}'
    tags: administrator,{{ item.name }}
    vhost: '/'
    configure_priv: '.*'
    write_priv: '.*'
    read_priv: '.*'
    state: present
  with_items:
    - '{{ rabbitmq_users }}'
  become: yes
  no_log: '{{ nolog }}'
  tags: [ rabbitmq ]

- name: Enable rabbitmq plugins
  rabbitmq_plugin:
    names: '{{ item }}'
    state: enabled
    new_only: yes
  with_items:
      - '{{ rabbitmq_plugins }}'
  become: yes
  notify:
  - restart rabbitmq-server
  tags: [ rabbitmq ]

- name: "Wait for mgmt port ({{ rabbitmq_mgmt_port }})"
  wait_for:
    port: '{{ rabbitmq_mgmt_port }}'
    delay: 5
  tags: [ rabbitmq ]

- name: Ensure rabbitmqadmin script is available
  shell: >
    curl -s
    http://127.0.0.1:{{ rabbitmq_mgmt_port }}/cli/rabbitmqadmin
    > /usr/local/bin/rabbitmqadmin &&
    chmod +x /usr/local/bin/rabbitmqadmin
  become: yes
  tags: [ rabbitmq ]

- name: Ensure ~/.rabbitmqadmin.conf is in root account
  template:
    src: '{{ item }}'
    dest: /root/.rabbitmqadmin.conf
    owner: '{{ root_user }}'
    group: '{{ root_group }}'
    mode: '{{ mode_0640 }}'
  with_first_found:
    - files:
        - '{{ rabbitmqadmin_conf }}'
        - rabbitmqadmin.conf.{{ inventory_hostname }}.j2
        - rabbitmqadmin.conf.category-{{ category }}.j2
        - rabbitmqadmin.conf.deployment-{{ deployment }}.j2
        - rabbitmqadmin.conf.j2
      paths:
        - '{{ dims_private }}/roles/{{ role_name }}/templates/rabbitmqadmin.conf/'
        - rabbitmqadmin.conf/
  become: yes
  tags: [ rabbitmq, config ]

- name: Create broker_objects.json file
  copy:
    src: '{{ item }}'
    dest: /etc/rabbitmq/broker_objects.json
    owner: rabbitmq
    group: rabbitmq
    mode: '{{ mode_0640 }}'
  with_first_found:
    - files:
        - '{{ rabbitmq_broker_objects }}'
        - broker_objects.json.{{ inventory_hostname }}
        - broker_objects.json.category-{{ category }}
        - broker_objects.json.deployment-{{ deployment }}
        - broker_objects.json
      paths:
        - '{{ dims_private }}/roles/{{ role_name }}/files'
        - files
  become: yes
  tags: [ rabbitmq, config ]

- name: Import broker_objects.json
  shell: "rabbitmqadmin -N localhost import /etc/rabbitmq/broker_objects.json"
  become: yes
  tags: [ rabbitmq, config ]

- name: Make defined bats tests present
  include: "{{ tasks_path }}/bats-tests.yml"
  tags: [ rabbitmq, tests ]

- include: "{{ tasks_path }}/post_tasks.yml"
  tags: [ rabbitmq ]

# vim: ft=ansible :
