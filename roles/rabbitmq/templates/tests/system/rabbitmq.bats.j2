#!/usr/bin/env bats
#
# {{ ansible_managed }} [ansible-playbooks v{{ ansibleplaybooks_version }}]
#
# vim: set ts=4 sw=4 tw=0 et :

load helpers

function setup() {
	source $DIMS/bin/dims_functions.sh
}

@test "[S][EV] Directory /etc/rabbitmq exists" {
    [ -d /etc/rabbitmq ]
}

@test "[S][EV] File /etc/rabbitmq/rabbitmq.config exists" {
    ! bash -c "id | grep -q sudo" && skip "Not in sudo group"
    sudo bash -c "[[ -f /etc/rabbitmq/rabbitmq.config ]]"
}

@test "[S][EV] Assert ownerships rabbitmq:rabbitmq for /etc/rabbitmq/rabbitmq.config" {
    ! bash -c "id | grep -q sudo" && skip "Not in sudo group"
	assert "rabbitmq:rabbitmq" sudo stat --printf "%U:%G" /etc/rabbitmq/rabbitmq.config
}

@test "[S][EV] File /etc/rabbitmq/rabbitmq-env.config exists" {
    ! bash -c "id | grep -q sudo" && skip "Not in sudo group"
    sudo bash -c "[[ -f /etc/rabbitmq/rabbitmq-env.conf ]]"
}

@test "[S][EV] Assert ownerships rabbitmq:rabbitmq for /etc/rabbitmq/rabbitmq-env.conf" {
    ! bash -c "id | grep -q sudo" && skip "Not in sudo group"
	assert "rabbitmq:rabbitmq" sudo stat --printf "%U:%G" /etc/rabbitmq/rabbitmq-env.conf
}

{% if ssl_certfile is defined %}
@test "[S][EV] SSL certificate {{ ssl_certfile }} exists" {
    [ -f {{ ssl_certfile }} ]
}

{% endif %}
{% if ssl_keyfile is defined %}
@test "[S][EV] SSL private key {{ ssl_keyfile }} exists" {
    [ -f {{ ssl_keyfile }} ]
}
{% endif %}
