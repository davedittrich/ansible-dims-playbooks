#!/bin/bash
# vim: set ts=4 sw=4 tw=0 et :
#
# {{ ansible_managed }}
#
# Copyright (C) 2014-2017, University of Washington. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

. $DIMS/lib/shflags
. $DIMS/bin/dims_functions.sh

# Tracks with bumpversion
DIMS_VERSION=3.6.0

ANSIBLE_USER=${ANSIBLE_USER:-{{ hostvars[inventory_hostname].ansible_user }}}
SSH_PORT=${SSH_PORT:-{{ hostvars[inventory_hostname].ansible_port }}}
SSH_HOST=${SSH_HOST:-{{ dims_fqdn }}}
PRIVATE_KEY=${PRIVATE_KEY:-$(get_ssh_private_key_file ${ANSIBLE_USER} ${DIMS_PRIVATE:-''})}
TUNNEL_PORT="${TUNNEL_PORT:-5901}"
TUNNEL_HOST="${TUNNEL_HOST:-127.0.0.1}"

# Test connectivity while also getting X11 DISPLAY from remote host
DISPLAY=$(ssh -i $PRIVATE_KEY -p ${SSH_PORT} ${ANSIBLE_USER}@${SSH_HOST} cat .vnc/DISPLAY)
if [[ -z $DISPLAY ]]; then
    echo "[!] Failed to determine DISPLAY"
    exit 1
fi

ssh -i ${PRIVATE_KEY} \
    -4 \
    -p ${SSH_PORT} \
    -L ${TUNNEL_PORT}:${TUNNEL_HOST}:${TUNNEL_PORT} \
    -o ForwardX11=yes \
    ${ANSIBLE_USER}@${SSH_HOST} 2>/dev/null "cat<<EOD; read line
[+] X11 forwarding connection to ${SSH_HOST} established.
[+] Remote X11 DISPLAY is $DISPLAY
[+] Configure your VNC client to use ${TUNNEL_HOST}:${TUNNEL_PORT}
[+] Use CTRL-C or ENTER to break tunnel connection...
EOD
"

exit $?
